0. 목표는 1-3 의 ls_final 을 완벽히 구현하는 것입니다. (S,h,l,a,r,wildcards)

1. 1-1,1-2,1-3 은 연결되며 누적됩니다. 최종적으로 1-1,1-2 내의 모든 기능을 수행하는 1-3을 만들면 되는 과제입니다.

2. 캡쳐 및 스크린샷은 이미 완료하여 필요없습니다. 
대신 코드 구현과 제가 이해를 하기 위해 라인별로 친절한 주석, function 마다 큰 덩어리로 comment 달아주시면 감사하겠습니다.

3. 각각의 실습도움파일 에는 과제에서 사용할 리눅스 내장함수들 구조체들이나 설명들이 있습니다. 예) fnmatch/ DIR dr 등..
   @실습도움파일의 실습 예제들은 과제가 아니라 안푸셔도 됩니다.

4. @@@@정렬기준@@@@ 중요!

0. sort 함수나 sort 헤더 같은 거 사용하지 않고 직접 정렬해야함!!(예를들어 버블소트..)

1) 기본적으로 모든 상황에서 파일이나 디렉토리 상관없이 ASCII 코드 순 정렬(단, 1-3제안서 10페이지와 같이 파일 디렉토리 동시 출력일 경우 파일들 상단에 정렬, 디텍토리 하단에 정렬)

2) 문자열들을 비교하는 모든!! 상황에서 hidden 파일은 앞에 .(점) 하나를 떼고 비교한다.

3) 대소문자 구분 없이 정렬하지만 특수문자가 들어간 경우 대문자 기준으로 정렬-> 따라서 모든 문자열 모두 대문자로 변환 후 아스키 비교하면됨
-> 대신 ABCD 와 abcd 는 대문자로 변환 하면 둘다 완전 동일하기에 이때는 변환되기 전 값의 아스키로 비교 

예를들어
abcd             .aaaa
ABCD      -->     ABCD 
.aaaa			abcd
a_cd		      a_cd


5. 에러메시지나 예외처리 문구도 제안서와 동일한 문장으로 띄우셔야 합니다. 

6. 1-3 제안서 파일에 result 결과 예시들 사진들을 잘 보시고 비교해보셔야 합니다. 저렇게 나와야 합니다.

7. 리눅스상 실제 ls보다는 쉽도록 와일드카드를 사용하는 경우에는 다른 옵션들은 같이 쓰지 않음!.